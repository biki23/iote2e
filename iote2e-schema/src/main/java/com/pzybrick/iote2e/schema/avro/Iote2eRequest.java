/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.pzybrick.iote2e.schema.avro;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Iote2eRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8364613780725515210L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Iote2eRequest\",\"namespace\":\"com.pzybrick.iote2e.schema.avro\",\"fields\":[{\"name\":\"login_name\",\"type\":\"string\"},{\"name\":\"source_name\",\"type\":\"string\"},{\"name\":\"source_type\",\"type\":\"string\"},{\"name\":\"request_uuid\",\"type\":\"string\"},{\"name\":\"timestamp\",\"type\":\"string\"},{\"name\":\"pairs\",\"type\":{\"type\":\"map\",\"values\":\"string\"}},{\"name\":\"operation\",\"type\":{\"type\":\"enum\",\"name\":\"OPERATION\",\"symbols\":[\"SENSORS_VALUES\",\"ACTUATOR_CONFIRM\",\"LOOPBACK\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence login_name;
  @Deprecated public java.lang.CharSequence source_name;
  @Deprecated public java.lang.CharSequence source_type;
  @Deprecated public java.lang.CharSequence request_uuid;
  @Deprecated public java.lang.CharSequence timestamp;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> pairs;
  @Deprecated public com.pzybrick.iote2e.schema.avro.OPERATION operation;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Iote2eRequest() {}

  /**
   * All-args constructor.
   * @param login_name The new value for login_name
   * @param source_name The new value for source_name
   * @param source_type The new value for source_type
   * @param request_uuid The new value for request_uuid
   * @param timestamp The new value for timestamp
   * @param pairs The new value for pairs
   * @param operation The new value for operation
   */
  public Iote2eRequest(java.lang.CharSequence login_name, java.lang.CharSequence source_name, java.lang.CharSequence source_type, java.lang.CharSequence request_uuid, java.lang.CharSequence timestamp, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> pairs, com.pzybrick.iote2e.schema.avro.OPERATION operation) {
    this.login_name = login_name;
    this.source_name = source_name;
    this.source_type = source_type;
    this.request_uuid = request_uuid;
    this.timestamp = timestamp;
    this.pairs = pairs;
    this.operation = operation;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return login_name;
    case 1: return source_name;
    case 2: return source_type;
    case 3: return request_uuid;
    case 4: return timestamp;
    case 5: return pairs;
    case 6: return operation;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: login_name = (java.lang.CharSequence)value$; break;
    case 1: source_name = (java.lang.CharSequence)value$; break;
    case 2: source_type = (java.lang.CharSequence)value$; break;
    case 3: request_uuid = (java.lang.CharSequence)value$; break;
    case 4: timestamp = (java.lang.CharSequence)value$; break;
    case 5: pairs = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    case 6: operation = (com.pzybrick.iote2e.schema.avro.OPERATION)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'login_name' field.
   * @return The value of the 'login_name' field.
   */
  public java.lang.CharSequence getLoginName() {
    return login_name;
  }

  /**
   * Sets the value of the 'login_name' field.
   * @param value the value to set.
   */
  public void setLoginName(java.lang.CharSequence value) {
    this.login_name = value;
  }

  /**
   * Gets the value of the 'source_name' field.
   * @return The value of the 'source_name' field.
   */
  public java.lang.CharSequence getSourceName() {
    return source_name;
  }

  /**
   * Sets the value of the 'source_name' field.
   * @param value the value to set.
   */
  public void setSourceName(java.lang.CharSequence value) {
    this.source_name = value;
  }

  /**
   * Gets the value of the 'source_type' field.
   * @return The value of the 'source_type' field.
   */
  public java.lang.CharSequence getSourceType() {
    return source_type;
  }

  /**
   * Sets the value of the 'source_type' field.
   * @param value the value to set.
   */
  public void setSourceType(java.lang.CharSequence value) {
    this.source_type = value;
  }

  /**
   * Gets the value of the 'request_uuid' field.
   * @return The value of the 'request_uuid' field.
   */
  public java.lang.CharSequence getRequestUuid() {
    return request_uuid;
  }

  /**
   * Sets the value of the 'request_uuid' field.
   * @param value the value to set.
   */
  public void setRequestUuid(java.lang.CharSequence value) {
    this.request_uuid = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public java.lang.CharSequence getTimestamp() {
    return timestamp;
  }

  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public void setTimestamp(java.lang.CharSequence value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'pairs' field.
   * @return The value of the 'pairs' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getPairs() {
    return pairs;
  }

  /**
   * Sets the value of the 'pairs' field.
   * @param value the value to set.
   */
  public void setPairs(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.pairs = value;
  }

  /**
   * Gets the value of the 'operation' field.
   * @return The value of the 'operation' field.
   */
  public com.pzybrick.iote2e.schema.avro.OPERATION getOperation() {
    return operation;
  }

  /**
   * Sets the value of the 'operation' field.
   * @param value the value to set.
   */
  public void setOperation(com.pzybrick.iote2e.schema.avro.OPERATION value) {
    this.operation = value;
  }

  /**
   * Creates a new Iote2eRequest RecordBuilder.
   * @return A new Iote2eRequest RecordBuilder
   */
  public static com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder newBuilder() {
    return new com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder();
  }

  /**
   * Creates a new Iote2eRequest RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Iote2eRequest RecordBuilder
   */
  public static com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder newBuilder(com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder other) {
    return new com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder(other);
  }

  /**
   * Creates a new Iote2eRequest RecordBuilder by copying an existing Iote2eRequest instance.
   * @param other The existing instance to copy.
   * @return A new Iote2eRequest RecordBuilder
   */
  public static com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder newBuilder(com.pzybrick.iote2e.schema.avro.Iote2eRequest other) {
    return new com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder(other);
  }

  /**
   * RecordBuilder for Iote2eRequest instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Iote2eRequest>
    implements org.apache.avro.data.RecordBuilder<Iote2eRequest> {

    private java.lang.CharSequence login_name;
    private java.lang.CharSequence source_name;
    private java.lang.CharSequence source_type;
    private java.lang.CharSequence request_uuid;
    private java.lang.CharSequence timestamp;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> pairs;
    private com.pzybrick.iote2e.schema.avro.OPERATION operation;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.login_name)) {
        this.login_name = data().deepCopy(fields()[0].schema(), other.login_name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source_name)) {
        this.source_name = data().deepCopy(fields()[1].schema(), other.source_name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.source_type)) {
        this.source_type = data().deepCopy(fields()[2].schema(), other.source_type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.request_uuid)) {
        this.request_uuid = data().deepCopy(fields()[3].schema(), other.request_uuid);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[4].schema(), other.timestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.pairs)) {
        this.pairs = data().deepCopy(fields()[5].schema(), other.pairs);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.operation)) {
        this.operation = data().deepCopy(fields()[6].schema(), other.operation);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Iote2eRequest instance
     * @param other The existing instance to copy.
     */
    private Builder(com.pzybrick.iote2e.schema.avro.Iote2eRequest other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.login_name)) {
        this.login_name = data().deepCopy(fields()[0].schema(), other.login_name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source_name)) {
        this.source_name = data().deepCopy(fields()[1].schema(), other.source_name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.source_type)) {
        this.source_type = data().deepCopy(fields()[2].schema(), other.source_type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.request_uuid)) {
        this.request_uuid = data().deepCopy(fields()[3].schema(), other.request_uuid);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[4].schema(), other.timestamp);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.pairs)) {
        this.pairs = data().deepCopy(fields()[5].schema(), other.pairs);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.operation)) {
        this.operation = data().deepCopy(fields()[6].schema(), other.operation);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'login_name' field.
      * @return The value.
      */
    public java.lang.CharSequence getLoginName() {
      return login_name;
    }

    /**
      * Sets the value of the 'login_name' field.
      * @param value The value of 'login_name'.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder setLoginName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.login_name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'login_name' field has been set.
      * @return True if the 'login_name' field has been set, false otherwise.
      */
    public boolean hasLoginName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'login_name' field.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder clearLoginName() {
      login_name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'source_name' field.
      * @return The value.
      */
    public java.lang.CharSequence getSourceName() {
      return source_name;
    }

    /**
      * Sets the value of the 'source_name' field.
      * @param value The value of 'source_name'.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder setSourceName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.source_name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'source_name' field has been set.
      * @return True if the 'source_name' field has been set, false otherwise.
      */
    public boolean hasSourceName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'source_name' field.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder clearSourceName() {
      source_name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'source_type' field.
      * @return The value.
      */
    public java.lang.CharSequence getSourceType() {
      return source_type;
    }

    /**
      * Sets the value of the 'source_type' field.
      * @param value The value of 'source_type'.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder setSourceType(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.source_type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'source_type' field has been set.
      * @return True if the 'source_type' field has been set, false otherwise.
      */
    public boolean hasSourceType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'source_type' field.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder clearSourceType() {
      source_type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'request_uuid' field.
      * @return The value.
      */
    public java.lang.CharSequence getRequestUuid() {
      return request_uuid;
    }

    /**
      * Sets the value of the 'request_uuid' field.
      * @param value The value of 'request_uuid'.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder setRequestUuid(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.request_uuid = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'request_uuid' field has been set.
      * @return True if the 'request_uuid' field has been set, false otherwise.
      */
    public boolean hasRequestUuid() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'request_uuid' field.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder clearRequestUuid() {
      request_uuid = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public java.lang.CharSequence getTimestamp() {
      return timestamp;
    }

    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder setTimestamp(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.timestamp = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder clearTimestamp() {
      timestamp = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'pairs' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getPairs() {
      return pairs;
    }

    /**
      * Sets the value of the 'pairs' field.
      * @param value The value of 'pairs'.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder setPairs(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[5], value);
      this.pairs = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'pairs' field has been set.
      * @return True if the 'pairs' field has been set, false otherwise.
      */
    public boolean hasPairs() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'pairs' field.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder clearPairs() {
      pairs = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'operation' field.
      * @return The value.
      */
    public com.pzybrick.iote2e.schema.avro.OPERATION getOperation() {
      return operation;
    }

    /**
      * Sets the value of the 'operation' field.
      * @param value The value of 'operation'.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder setOperation(com.pzybrick.iote2e.schema.avro.OPERATION value) {
      validate(fields()[6], value);
      this.operation = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'operation' field has been set.
      * @return True if the 'operation' field has been set, false otherwise.
      */
    public boolean hasOperation() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'operation' field.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.Iote2eRequest.Builder clearOperation() {
      operation = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public Iote2eRequest build() {
      try {
        Iote2eRequest record = new Iote2eRequest();
        record.login_name = fieldSetFlags()[0] ? this.login_name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.source_name = fieldSetFlags()[1] ? this.source_name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.source_type = fieldSetFlags()[2] ? this.source_type : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.request_uuid = fieldSetFlags()[3] ? this.request_uuid : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.timestamp = fieldSetFlags()[4] ? this.timestamp : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.pairs = fieldSetFlags()[5] ? this.pairs : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[5]);
        record.operation = fieldSetFlags()[6] ? this.operation : (com.pzybrick.iote2e.schema.avro.OPERATION) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
