/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.pzybrick.iote2e.schema.avro;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class LoginActuatorResponse extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2417105215291595267L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LoginActuatorResponse\",\"namespace\":\"com.pzybrick.iote2e.schema.avro\",\"fields\":[{\"name\":\"login_uuid\",\"type\":\"string\"},{\"name\":\"source_uuid\",\"type\":\"string\"},{\"name\":\"sensor_name\",\"type\":\"string\"},{\"name\":\"actuator_name\",\"type\":\"string\"},{\"name\":\"actuator_value\",\"type\":\"string\"},{\"name\":\"actuator_value_updated_at\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence login_uuid;
  @Deprecated public java.lang.CharSequence source_uuid;
  @Deprecated public java.lang.CharSequence sensor_name;
  @Deprecated public java.lang.CharSequence actuator_name;
  @Deprecated public java.lang.CharSequence actuator_value;
  @Deprecated public java.lang.CharSequence actuator_value_updated_at;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LoginActuatorResponse() {}

  /**
   * All-args constructor.
   * @param login_uuid The new value for login_uuid
   * @param source_uuid The new value for source_uuid
   * @param sensor_name The new value for sensor_name
   * @param actuator_name The new value for actuator_name
   * @param actuator_value The new value for actuator_value
   * @param actuator_value_updated_at The new value for actuator_value_updated_at
   */
  public LoginActuatorResponse(java.lang.CharSequence login_uuid, java.lang.CharSequence source_uuid, java.lang.CharSequence sensor_name, java.lang.CharSequence actuator_name, java.lang.CharSequence actuator_value, java.lang.CharSequence actuator_value_updated_at) {
    this.login_uuid = login_uuid;
    this.source_uuid = source_uuid;
    this.sensor_name = sensor_name;
    this.actuator_name = actuator_name;
    this.actuator_value = actuator_value;
    this.actuator_value_updated_at = actuator_value_updated_at;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return login_uuid;
    case 1: return source_uuid;
    case 2: return sensor_name;
    case 3: return actuator_name;
    case 4: return actuator_value;
    case 5: return actuator_value_updated_at;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: login_uuid = (java.lang.CharSequence)value$; break;
    case 1: source_uuid = (java.lang.CharSequence)value$; break;
    case 2: sensor_name = (java.lang.CharSequence)value$; break;
    case 3: actuator_name = (java.lang.CharSequence)value$; break;
    case 4: actuator_value = (java.lang.CharSequence)value$; break;
    case 5: actuator_value_updated_at = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'login_uuid' field.
   * @return The value of the 'login_uuid' field.
   */
  public java.lang.CharSequence getLoginUuid() {
    return login_uuid;
  }

  /**
   * Sets the value of the 'login_uuid' field.
   * @param value the value to set.
   */
  public void setLoginUuid(java.lang.CharSequence value) {
    this.login_uuid = value;
  }

  /**
   * Gets the value of the 'source_uuid' field.
   * @return The value of the 'source_uuid' field.
   */
  public java.lang.CharSequence getSourceUuid() {
    return source_uuid;
  }

  /**
   * Sets the value of the 'source_uuid' field.
   * @param value the value to set.
   */
  public void setSourceUuid(java.lang.CharSequence value) {
    this.source_uuid = value;
  }

  /**
   * Gets the value of the 'sensor_name' field.
   * @return The value of the 'sensor_name' field.
   */
  public java.lang.CharSequence getSensorName() {
    return sensor_name;
  }

  /**
   * Sets the value of the 'sensor_name' field.
   * @param value the value to set.
   */
  public void setSensorName(java.lang.CharSequence value) {
    this.sensor_name = value;
  }

  /**
   * Gets the value of the 'actuator_name' field.
   * @return The value of the 'actuator_name' field.
   */
  public java.lang.CharSequence getActuatorName() {
    return actuator_name;
  }

  /**
   * Sets the value of the 'actuator_name' field.
   * @param value the value to set.
   */
  public void setActuatorName(java.lang.CharSequence value) {
    this.actuator_name = value;
  }

  /**
   * Gets the value of the 'actuator_value' field.
   * @return The value of the 'actuator_value' field.
   */
  public java.lang.CharSequence getActuatorValue() {
    return actuator_value;
  }

  /**
   * Sets the value of the 'actuator_value' field.
   * @param value the value to set.
   */
  public void setActuatorValue(java.lang.CharSequence value) {
    this.actuator_value = value;
  }

  /**
   * Gets the value of the 'actuator_value_updated_at' field.
   * @return The value of the 'actuator_value_updated_at' field.
   */
  public java.lang.CharSequence getActuatorValueUpdatedAt() {
    return actuator_value_updated_at;
  }

  /**
   * Sets the value of the 'actuator_value_updated_at' field.
   * @param value the value to set.
   */
  public void setActuatorValueUpdatedAt(java.lang.CharSequence value) {
    this.actuator_value_updated_at = value;
  }

  /**
   * Creates a new LoginActuatorResponse RecordBuilder.
   * @return A new LoginActuatorResponse RecordBuilder
   */
  public static com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder newBuilder() {
    return new com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder();
  }

  /**
   * Creates a new LoginActuatorResponse RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LoginActuatorResponse RecordBuilder
   */
  public static com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder newBuilder(com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder other) {
    return new com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder(other);
  }

  /**
   * Creates a new LoginActuatorResponse RecordBuilder by copying an existing LoginActuatorResponse instance.
   * @param other The existing instance to copy.
   * @return A new LoginActuatorResponse RecordBuilder
   */
  public static com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder newBuilder(com.pzybrick.iote2e.schema.avro.LoginActuatorResponse other) {
    return new com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder(other);
  }

  /**
   * RecordBuilder for LoginActuatorResponse instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LoginActuatorResponse>
    implements org.apache.avro.data.RecordBuilder<LoginActuatorResponse> {

    private java.lang.CharSequence login_uuid;
    private java.lang.CharSequence source_uuid;
    private java.lang.CharSequence sensor_name;
    private java.lang.CharSequence actuator_name;
    private java.lang.CharSequence actuator_value;
    private java.lang.CharSequence actuator_value_updated_at;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.login_uuid)) {
        this.login_uuid = data().deepCopy(fields()[0].schema(), other.login_uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source_uuid)) {
        this.source_uuid = data().deepCopy(fields()[1].schema(), other.source_uuid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sensor_name)) {
        this.sensor_name = data().deepCopy(fields()[2].schema(), other.sensor_name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.actuator_name)) {
        this.actuator_name = data().deepCopy(fields()[3].schema(), other.actuator_name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.actuator_value)) {
        this.actuator_value = data().deepCopy(fields()[4].schema(), other.actuator_value);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.actuator_value_updated_at)) {
        this.actuator_value_updated_at = data().deepCopy(fields()[5].schema(), other.actuator_value_updated_at);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing LoginActuatorResponse instance
     * @param other The existing instance to copy.
     */
    private Builder(com.pzybrick.iote2e.schema.avro.LoginActuatorResponse other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.login_uuid)) {
        this.login_uuid = data().deepCopy(fields()[0].schema(), other.login_uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.source_uuid)) {
        this.source_uuid = data().deepCopy(fields()[1].schema(), other.source_uuid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sensor_name)) {
        this.sensor_name = data().deepCopy(fields()[2].schema(), other.sensor_name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.actuator_name)) {
        this.actuator_name = data().deepCopy(fields()[3].schema(), other.actuator_name);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.actuator_value)) {
        this.actuator_value = data().deepCopy(fields()[4].schema(), other.actuator_value);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.actuator_value_updated_at)) {
        this.actuator_value_updated_at = data().deepCopy(fields()[5].schema(), other.actuator_value_updated_at);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'login_uuid' field.
      * @return The value.
      */
    public java.lang.CharSequence getLoginUuid() {
      return login_uuid;
    }

    /**
      * Sets the value of the 'login_uuid' field.
      * @param value The value of 'login_uuid'.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder setLoginUuid(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.login_uuid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'login_uuid' field has been set.
      * @return True if the 'login_uuid' field has been set, false otherwise.
      */
    public boolean hasLoginUuid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'login_uuid' field.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder clearLoginUuid() {
      login_uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'source_uuid' field.
      * @return The value.
      */
    public java.lang.CharSequence getSourceUuid() {
      return source_uuid;
    }

    /**
      * Sets the value of the 'source_uuid' field.
      * @param value The value of 'source_uuid'.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder setSourceUuid(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.source_uuid = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'source_uuid' field has been set.
      * @return True if the 'source_uuid' field has been set, false otherwise.
      */
    public boolean hasSourceUuid() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'source_uuid' field.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder clearSourceUuid() {
      source_uuid = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'sensor_name' field.
      * @return The value.
      */
    public java.lang.CharSequence getSensorName() {
      return sensor_name;
    }

    /**
      * Sets the value of the 'sensor_name' field.
      * @param value The value of 'sensor_name'.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder setSensorName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.sensor_name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'sensor_name' field has been set.
      * @return True if the 'sensor_name' field has been set, false otherwise.
      */
    public boolean hasSensorName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'sensor_name' field.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder clearSensorName() {
      sensor_name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'actuator_name' field.
      * @return The value.
      */
    public java.lang.CharSequence getActuatorName() {
      return actuator_name;
    }

    /**
      * Sets the value of the 'actuator_name' field.
      * @param value The value of 'actuator_name'.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder setActuatorName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.actuator_name = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'actuator_name' field has been set.
      * @return True if the 'actuator_name' field has been set, false otherwise.
      */
    public boolean hasActuatorName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'actuator_name' field.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder clearActuatorName() {
      actuator_name = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'actuator_value' field.
      * @return The value.
      */
    public java.lang.CharSequence getActuatorValue() {
      return actuator_value;
    }

    /**
      * Sets the value of the 'actuator_value' field.
      * @param value The value of 'actuator_value'.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder setActuatorValue(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.actuator_value = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'actuator_value' field has been set.
      * @return True if the 'actuator_value' field has been set, false otherwise.
      */
    public boolean hasActuatorValue() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'actuator_value' field.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder clearActuatorValue() {
      actuator_value = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'actuator_value_updated_at' field.
      * @return The value.
      */
    public java.lang.CharSequence getActuatorValueUpdatedAt() {
      return actuator_value_updated_at;
    }

    /**
      * Sets the value of the 'actuator_value_updated_at' field.
      * @param value The value of 'actuator_value_updated_at'.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder setActuatorValueUpdatedAt(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.actuator_value_updated_at = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'actuator_value_updated_at' field has been set.
      * @return True if the 'actuator_value_updated_at' field has been set, false otherwise.
      */
    public boolean hasActuatorValueUpdatedAt() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'actuator_value_updated_at' field.
      * @return This builder.
      */
    public com.pzybrick.iote2e.schema.avro.LoginActuatorResponse.Builder clearActuatorValueUpdatedAt() {
      actuator_value_updated_at = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public LoginActuatorResponse build() {
      try {
        LoginActuatorResponse record = new LoginActuatorResponse();
        record.login_uuid = fieldSetFlags()[0] ? this.login_uuid : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.source_uuid = fieldSetFlags()[1] ? this.source_uuid : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.sensor_name = fieldSetFlags()[2] ? this.sensor_name : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.actuator_name = fieldSetFlags()[3] ? this.actuator_name : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.actuator_value = fieldSetFlags()[4] ? this.actuator_value : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.actuator_value_updated_at = fieldSetFlags()[5] ? this.actuator_value_updated_at : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
